abrir o docker:
 docker exec -it postgres bash

entrar na db customer:
 psql -U amigoscode -d customer

limpar a base de dados:
delete from flyway_schema_history;
drop table customer;


(dps de mvn package) Criar a imagem do docker e dar push para o docker hub
 mvn compile jib:build

 para correr o container do backend API, correr o comando
 docker run --name amigoscode-api --rm -p8080:8080 --network spring-boot-exemple_db pg47101/amigoscode-api --spring.datasource.url=jdbc:postgresql://db:5432/customer
 NOTAS:
 - --network spring-boot-exemple_db utiliza a rede do container do postgres para conseguirem comunicar
 - --spring.datasource.url=jdbc:postgresql://db:5432/customer muda a datasource do application.yml, para comunicar com a porta aberta no constainer da base de dados (db)
 - este comando Ã© depois substituido no docker compose para automatizar o processo

para entrar na ec2 :
ssh -i .\amigoscode.pem ec2-user@15.188.186.124

Restart environment:
eb restore e-cpppbiucth

Comandos para criar a base de dados customer (correr na instancia EC2)
- docker run --rm -it postgres:alpine bach
- pqsl -U amighoscode -d postgres -h link_db
